#!/usr/bin/env bash
source ~/dotfiles/zsh/functions.zsh

set -e

# Ask for sudo access
sudo -v

DEFAULT_SHELL=`which zsh`
HOST_NAME="$USER.dev"
BONJOUR_NAME="$USER-mac"

CURRENT_SHELL="$(dscl . -read /Users/$USER UserShell | cut -d " " -f 2)"
if test "$CURRENT_SHELL" != $DEFAULT_SHELL; then
  echo "Changing default shell to $DEFAULT_SHELL..."
  sudo chsh -s "$DEFAULT_SHELL" "$USER"
fi

if test "$(sudo scutil --get ComputerName)" != "$HOST_NAME"; then
  echo "Setting computer name to $HOST_NAME..."
  sudo scutil --set ComputerName "$HOST_NAME"
  sudo scutil --set HostName "$HOST_NAME"
fi

if test "$(sudo scutil --get LocalHostName)" != "$BONJOUR_NAME"; then
  echo "Setting bonjour host name to $BONJOUR_NAME..."
  sudo scutil --set LocalHostName "$BONJOUR_NAME"
fi

# Homebrew
if !(which brew > /dev/null); then
  echo 'Installing brew...'
  ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
fi

echo "Updating brew..."
brew update || true

echo "Running brew doctor..."
brew doctor || true

if !(brew tap | grep cask > /dev/null); then
  echo "Tap hombrew-cask"
  brew tap caskroom/cask
fi

echo "Upgrade brew-cask..."
brew upgrade brew-cask || true

brew_install() {
  for app; do
    if !(brew list | grep $app > /dev/null); then
      echo "Installing: $app"
      brew install $app || true
    fi
  done
}

agents_install() {
  for app; do
    if !(launchctl list | grep $app > /dev/null); then
      echo "Installing agent: $app"
      agents $app install || true
    fi
  done
}

brew_install brew-cask rbenv rbenv-default-gems rbenv-gem-rehash ruby-build \
  imagemagick redis memcached mongodb mysql postgresql elasticsearch node

agents_install redis memcached mongodb mysql postgresql elasticsearch

# Setup pow
if !(brew list | grep pow > /dev/null); then
  echo "Installing: pow"
  brew install pow
  mkdir -p ~/Library/Application\ Support/Pow/Hosts
  ln -sf ~/Library/Application\ Support/Pow/Hosts ~/.pow
  sudo pow --install-system
  pow --install-local
  sudo launchctl load -w /Library/LaunchDaemons/cx.pow.firewall.plist
  launchctl load -w ~/Library/LaunchAgents/cx.pow.powd.plist
fi

exit 0
